SqlConnection.ConnectionString - свойство

https://msdn.microsoft.com/ru-ru/library/system.data.sqlclient.sqlconnection.connectionstring(v=vs.110).aspx

Получает или задает строку, используемую для открытия базы данных SQL Server.
Пространство имен:  System.Data.SqlClient

Синтаксис

C#C++F#VB
[SettingsBindableAttribute(true)]
public override string ConnectionString { get; set; }
Значение свойства
Тип: System.String
Строка подключения, включающая имя источника базы данных и другие параметры, необходимые для установки исходного подключения. Значение по умолчанию — пустая строка. 
Реализации
IDbConnection.ConnectionString

Исключения

Исключение	Условие
ArgumentException	
Указан неправильный аргумент строки подключения или не указан обязательный аргумент строки подключения.

Заметки

ConnectionString сходна со строкой подключения OLE DB, но не идентична ей. В отличие от OLE DB или ADO возвращаемая строка подключения совпадает с задаваемой пользователем ConnectionString — за исключением сведений о безопасности в случае, если Persist Security Info имеет значение false (значение по умолчанию). Поставщик данных .NET Framework для SQL Server не сохраняется и не возвращает пароль в строке подключения, если только Persist Security Info не равен true.
Для подключения к базе данных можно использовать свойство ConnectionString. В следующем примере показана типичная строка подключения.
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"
Используйте новый объект SqlConnectionStringBuilder для составления допустимых строк подключения во время выполнения. Для получения дополнительной информации см. Построители строк подключения.
Свойство ConnectionString можно задавать только при закрытом подключении. Многие значения строки подключения имеют соответствующие свойства, доступные только для чтения. Когда задана строка подключения, эти свойства обновляются, если не обнаружена ошибка. В этом случае ни одно из свойств не обновляется. Свойства SqlConnection возвращают только параметры, содержащиеся в ConnectionString.
Для подключения к локальному компьютеру укажите имя сервера имя "(local)". Если имя сервера не задано, будет сделана попытка установить соединение с экземпляром по умолчанию на локальном компьютере.
При сбросе ConnectionString для закрытого подключения сбрасываются все значения строки подключения (и связанные свойства), включая пароль. Например, если выполняется сброс строки подключения, содержащей "Database=AdventureWorks", и последующая установка для нее значения "Data Source=myserver;Integrated Security=true", свойство Database больше не будет иметь значение "AdventureWorks".
Сразу после установки строки подключения осуществляется ее анализ. Если при разборе строки обнаружены синтаксические ошибки, генерируется исключение среды выполнения, например ArgumentException. Другие ошибки могут быть обнаружены только при попытке открытия подключения.
Базовый формат строки подключения содержит последовательность пар "ключевое слово — значение", разделенных символами точки с запятой. Знак равенства (=) связывает каждое ключевое слово с его значением. Чтобы включить значение, содержащее символ точки с запятой, одинарной или двойной кавычки, необходимо заключить это значение в двойные кавычки. Если значение содержит как символ точки с запятой, так и символ двойной кавычки, необходимо заключить значение в одинарные кавычки. Кроме того, одинарную кавычку можно использовать, если значение начинается с символа двойной кавычки. И наоборот, если значение начинается с одинарной кавычки, можно использовать символ двойной кавычки. Если значение содержит символы как одинарных, так и двойных кавычек, то внутри него необходимо повторить два раза символ тех кавычек, в которые оно заключено.
Чтобы включить в значение строки начальные или концевые пробелы, необходимо заключить конечную строку в одинарные или двойные кавычки. Любые начальные или концевые пробелы вокруг значений, которые относятся к типу целочисленных, логических или перечислимых значений, игнорируются, даже если они заключены в кавычки. Тем не менее, пробелы сохраняются внутри ключевого слова или значения, которое является строковым литералом. Одинарные или двойные кавычки могут использоваться в строке подключения без использования разделителей (например, источник данных = my"Server или источник данных = " мой сервер), если символ кавычки не будет первый или последний знак в значение.
Ключевые слова не зависят от регистра символов.
В приведенной ниже таблице представлены допустимые имена для значений ключевых слов в ConnectionString.

Ключевое слово
Default
Описание
Addr
Неприменимо
Синоним источника данных.
Адрес
Неприменимо
Синоним источника данных.
APP
Неприменимо
Синоним имени приложения.
Имя приложения,
Неприменимо
Имя приложения, или, если оно отсутствует, '.Net SqlClient Data Provider'.
Имя приложения может состоять из 128 символов или меньше.
ApplicationIntent
ReadWrite
Объявляет тип нагрузки приложения при подключении к серверу. Допустимые значения: ReadOnly и ReadWrite. Например:
ApplicationIntent=ReadOnly
Дополнительные сведения о поддержке SqlClient в группах доступности AlwaysOn см. в разделе Поддержка SqlClient для высокого уровня доступности, аварийного восстановления.
Asynchronous Processing
-или-
Async
false
Когда задано значение true, поддерживаются асинхронные операции. Распознаваемые значения: true, false, yes и no.
Это свойство не обрабатывается, начиная с .NET Framework 4.5. Дополнительные сведения о поддержке SqlClient для асинхронного программирования, см. Асинхронное программирование.
AttachDBFilename
-или-
Дополнительные свойства
-или-
Initial File Name
Неприменимо
Имя основного файла базы данных, включая полный путь к подключаемой базе данных. AttachDBFilename поддерживается только для первичных файлов данных с расширением MDF.
Если значение ключа AttachDBFileName указан в строке соединения, база данных присоединяется и становится базой данных по умолчанию для соединения.
Если этот ключ не указан и если база данных уже присоединена, база данных не будет переподключена. Ранее прикрепленная база данных будет использоваться для этого подключения в качестве базы данных по умолчанию.
Если этот ключ указан вместе с ключом AttachDBFileName, значение этого параметра будет использоваться как псевдоним. Однако если имя уже используется в другой присоединенную базу данных, соединение будет разорвано.
Путь может быть абсолютным или относительным, заданным с использованием строки подстановки DataDirectory. При использовании строки подстановки DataDirectory файл базы данных должен существовать в каталоге, на который указывает строка подстановки.
ПримечаниеПримечание	Имена путей удаленного сервера, HTTP и UNC не поддерживаются. 
Имя базы данных должно быть задано с ключевым словом database или одним из его псевдонимов, как в следующем примере:
"AttachDbFileName=|DataDirectory|\data\YourDB.mdf;integrated security=true;database=YourDatabase"
Если файл журнала существует в том же каталоге, что и файл базы данных, и при подключении первичного файла данных используется ключевое слово database, генерируется ошибка. В таком случае следует удалить файл журнала. После присоединения базы данных новый файл журнала будет автоматически сгенерирован по физическому пути.
Connect Timeout
-или-
Connection Timeout
-или-
Время ожидания
15
Продолжительность времени ожидания подключения к серверу (в секундах) перед прекращением попытки подключения и генерацией ошибки.
Допустимые значения больше или равны нулю и меньше или равны 2147483647.
Для подключения к базе данных SQL Azure укажите время ожидания подключения равное 30 секундам.
Connection Lifetime
-или-
Load Balance Timeout
0
Когда подключение возвращается в пул, время его создания сравнивается с текущим и подключение удаляется, если его время жизни (в секундах) превышает значение, указанное в Connection Lifetime. Данный подход применяется в кластерных конфигурациях для принудительного выравнивания нагрузки между работающим и только что запущенным сервером.
В случае нулевого (0) значения подключения в пуле будут иметь максимальный таймаут.
Context Connection
false
true при подключении внутрипроцессной связь с SQL Server должна.
Current Language
-или-
Language
Неприменимо
Задает язык, используемый для предупреждений или сообщений об ошибках сервера базы данных.
Название языка может быть 128 символов или меньше.
Источник данных
-или-
Server
-или-
Адрес
-или-
Addr
-или-
Network Address
Неприменимо
Имя или сетевой адрес экземпляра SQL Server, к которому необходимо подключиться. После имени сервера может быть задан номер порта:
server=tcp:servername, portnumber
При задании локального экземпляра всегда используйте имя (local). Чтобы указать протокол, добавьте один из следующих префиксов:
np:(local), tcp:(local), lpc:(local)
Начиная с .NET Framework 4.5 можно также подключиться к базе данных LocalDB следующим образом:
server=(localdb)\\myInstance
Дополнительные сведения о LocalDB см. в разделе Поддержка SqlClient LocalDB.
Источник данных должен использовать формат TCP или формат именованных каналов.
Формат TCP следующий:
tcp:<имя_узла>\<имя_экземпляра>
tcp:<имя_узла>,<номер_порта_TCP/IP>
Формат TCP должен начинаться с префикса "tcp:" и предшествовать экземпляру базы данных, как указано в имени узла и имени экземпляра.
Имя узла ДОЛЖНО быть задано одним из следующих способов:
NetBIOSName
IPv4Address
IPv6Address
Имя экземпляра используется для разрешения в конкретный номер порта TCP/IP, на котором размещается экземпляр базы данных. С другой стороны, также допускается прямое указание номера порта TCP/IP. Если имя и номер порта экземпляра не присутствуют, используется экземпляр базы данных по умолчанию.
Формат именованных каналов имеет следующий вид:
np:\\<имя узла>\pipe\<имя канала>
Формат именованных каналов ДОЛЖЕН начинаться с префикса "np:", за которым должно следовать имя именованного канала.
Имя узла ДОЛЖНО быть задано одним из следующих способов:
NetBIOSName
IPv4Address
IPv6Address
Имя канала используется для определения экземпляра базы данных, к которому будет подключаться приложение .NET Framework.
Если значение ключа Network указан, префиксы "tcp:" и "np:" не нужно указывать.
ПримечаниеПримечание	По TCP можно использовать вместо общей памяти, можно с помощью префикса протокола TCP. к имени сервера в строке подключения, или с помощью localhost. 
Encrypt
false
При true, SQL Server использует шифрование SSL для всех данных, передаваемых между клиентом и сервером, если у сервера есть установленный сертификат. Распознаваемые значения: true, false, yes и no. Для получения дополнительной информации см. Синтаксис строки подключения.
Начиная с .NET Framework 4.5, при TrustServerCertificate значение и Encrypt условия, имя (или IP-адрес сервера) в SSL-сертификате SQL Server должны точно соответствовать имени сервера (или IP-адрес), указанным в строке подключения. В противном случае соединение не будет установлено. Дополнительные сведения о поддержке сертификатов тема которых начинается с подстановочным знаком (*) см. в разделе Принятые подстановочные знаки сертификатов сервера, используемые для проверки подлинности сервера.
Enlist
'true'
true означает, что pooler подключения SQL Server автоматически включать соединения в контексте текущей транзакции потока создания.
Failover Partner
Неприменимо
Имя резервного сервера, на котором настроено зеркалирование базы данных.
Если значение этого ключа "", затем должен присутствовать Initial Catalog , и его значение не должно быть "".
Имя сервера может состоять из 128 символов или меньше.
Если вы укажете резервный сервер, но резервного сервера не настроена для зеркального отображения базы данных и сервера-источника (задано с ключевым словом сервера) не доступен, то соединение будет разорвано.
Если вы укажете резервный сервер и основной сервер не настроен для зеркального отображения базы данных, соединение с основным сервером (задано с ключевым словом сервера) будет успешной, если основной сервер доступен.
Initial Catalog
-или-
Database
Неприменимо
Имя базы данных.
Имя базы данных может состоять из 128 символов или меньше.
Integrated Security
-или-
Trusted_Connection
false
Если задано значение false, в подключении заданы также параметры User ID и Password. Если задано значение true, для проверки подлинности используются текущие учетные данные Windows.
Распознаваемые значения: true, false, yes, no и sspi (настоятельно рекомендуется), что эквивалентно true.
Если ИД пользователя и пароль заданы и встроенные средства безопасности установлено значение "true", ИД пользователя и пароль будут проигнорированы, и использована встроенная безопасность.
SqlCredential более безопасный способ определения учетные данные для подключения с использованием проверки подлинности SQL Server (Integrated Security=false).
Max Pool Size
100
Максимальное разрешенное количество подключений в пуле.
Допустимые значения больше или равны 1. Значения, которые меньше, чем Min Pool Size, вызывают ошибку.
Min Pool Size
0
Минимальное разрешенное количество подключений в пуле.
Допустимые значения больше или равны 0. Ноль (0) в этом поле означает, что изначально открывать минимальное количество подключений не требуется.
Значения, которые больше, чем Max Pool Size, вызывают ошибку.
MultipleActiveResultSets
false
Если задано значение true, приложение может поддерживать несколько результирующих наборов данных (MARS). Если задано значение false, приложение должно обработать или отменить все результирующие наборы одной массовой операции, прежде чем выполнять через то же подключение другую пакетную операцию.
Распознаваемые значения: true и false.
Дополнительные сведения см. в разделе Режим MARS.
MultiSubnetFailover
FALSE
Указать multiSubnetFailover=True при подключении к доступности прослушивателя группы доступности команды SQL Server 2012 (или более поздней версии) или экземпляра отказоустойчивого кластера SQL Server 2012 (или более поздней версии). multiSubnetFailover=True настраивает SqlClient для обеспечения быстрого обнаружения и подключения к (в настоящее время) активному серверу. Возможные значения Yes и No, True и False или 1 и 0. Например:
MultiSubnetFailover=True
Значение по умолчанию – false. Поддержка дополнительных сведений о SqlClient для всегда включен AGs см. в разделе Поддержка SqlClient для высокого уровня доступности, аварийного восстановления.
Network Library
-или-
Сеть
-или-
Net
Неприменимо
Сетевая библиотека, используемая для установления подключения к экземпляру SQL Server. Поддерживаются следующие значения:
dbnmpntw (именованные каналы)
dbmsrpcn (Multiprotocol, Windows RPC)
dbmsadsn (Apple Talk)
dbmsgnet (VIA)
dbmslpcn (общая память)
dbmsspxn (IPX/SPX)
dbmssocn (TCP/IP)
Dbmsvinn (Banyan Vines)
В системе, к которой осуществляется подключение, должна быть установлена соответствующая сетевая DLL. Общая память используется, если не указана сеть и используется локальный сервер (например, "." или "(local)"). В этом примере используются сетевая библиотека Win32 Winsock TCP/IP (dbmssocn) и порт 1433.
Network Library=dbmssocn;Data Source=000.000.000.000,1433;
Packet Size
8000
Размер в байтах пакетов сети, используемых для связи с экземпляром SQL Server.
Размер пакета может быть больше 512 или равен ему и меньше 32768 или равен ему.
Password
-или-
PWD
Неприменимо
Пароль для учетной записи входа SQL Server. Не рекомендуется. Чтобы обеспечить наивысший уровень безопасности, настоятельно рекомендуется использовать вместо этого ключевое слово Integrated Security или Trusted_Connection. SqlCredential более безопасный способ определения учетные данные для подключения с использованием проверки подлинности SQL Server.
Пароль должен состоять из 128 символов или меньше.
Persist Security Info
-или-
PersistSecurityInfo
false
Когда задано значение false или no (настоятельно рекомендуется), важные сведения (такие, как пароль) не возвращаются как часть подключения, если оно открыто или когда-либо находилось в открытом состоянии. При сбросе строки подключения сбрасываются также все ее значения, включая пароль. Распознаваемые значения: true, false, yes и no.
Pooling
'true'
Когда значение этого ключа установлено равным true, все вновь созданные подключения добавляются в пул при закрытии их приложением. В следующей попытке открыть то же соединение будет использоваться связи из пула.
Подключения считаются одинаковыми, если у них одинаковые строки подключения. Разные подключения имеют различные строки подключения.
Этот ключ может иметь значение "true", "false", "yes" или "no".
Репликация
false
true , если поддерживается репликация с использованием данного соединения.
Transaction Binding
Implicit Unbind
Управляет связыванием подключения с присоединенной транзакцией System.Transactions.
Доступны следующие значения:
Transaction Binding=Implicit Unbind;
Transaction Binding=Explicit Unbind;
Implicit Unbind указывает, что следует отсоединять подключение от транзакции, когда она завершается. После отсоединения дополнительные запросы через это подключение выполняются в режиме автофиксации. Свойство System.Transactions.Transaction.Current не проверяется при выполнении запросов, когда транзакция активна. После завершения транзакции дополнительные запросы выполняются в режиме автофиксации.
Если система завершает транзакцию (в рамках используемого блока) до завершения последней команды, он будет создавать InvalidOperationException.
Explicit Unbind указывает, что подключение должно оставаться присоединенным к транзакции до тех пор, пока оно не будет закрыто или не будет явно вызван метод SqlConnection.TransactionEnlist(null). Начиная с .NET Framework 4, изменения в Implicit Unbind делают устаревшим Explicit Unbind. Исключение InvalidOperationException выбрасывается, если Transaction.Current не является присоединенной или активной транзакцией.
TrustServerCertificate
false
Если задано значение true, то в случае, если для проверки доверия не выполняется обход цепочки сертификатов, для шифрования канала используется SSL. Если параметр TrustServerCertificate имеет значение true, а параметр Encrypt — false, канал не шифруется. Распознаваемые значения: true, false, yes и no. Для получения дополнительной информации см. Синтаксис строки подключения.
Type System Version
Неприменимо
Строковое значение, определяющее систему типов, ожидаемую приложением. Функциональность, доступную в клиентское приложение зависит от версии SQL Server и уровня совместимости базы данных. Явно устанавливать версию системы типов, что клиентское приложение было написано для избежать потенциальных проблем, которые могут привести к его; если используется другая версия SQL Server.
ПримечаниеПримечание	Версию системы типов нельзя задать для внутрипроцессного выполнения кода среды CLR на сервере SQL Server.Для получения дополнительной информации см. Интеграция SQL Server со средой CLR. 
Доступны следующие значения:
Type System Version=SQL Server 2012;
Type System Version=SQL Server 2008;
Type System Version=SQL Server 2005;
Type System Version=Latest;
Type System Version=SQL Server 2012; указывается, что приложение требует версии 11.0.0.0 Microsoft.SqlServer.Types.dll. Другие параметры Type System Version потребуются версии 10.0.0.0 Microsoft.SqlServer.Types.dll.
Latest устарел и не должен использоваться. Latest равно Type System Version=SQL Server 2008;.
User ID
-или-
UID
-или-
Неприменимо
Учетная запись входа SQL Server. Не рекомендуется. Чтобы обеспечить наивысший уровень безопасности, настоятельно рекомендуется использовать вместо этого ключевое слово Integrated Security или Trusted_Connection. SqlCredential более безопасный способ определения учетные данные для подключения с использованием проверки подлинности SQL Server.
Длина ИД пользователя должна быть 128 символа или меньше.
User Instance
false
Значение, которое показывает, следует ли перенаправить подключения из экземпляра SQL Server по умолчанию срочного в выполнение- начатому образцу экземпляра под учетной записью вызывающего объекта.
Workstation ID
-или-
WSID
Имя локального компьютера
Имя рабочей станции при подключении к SQL Server.
ИД должен содержать 128 символов или меньше.
В приведенном ниже списке представлены допустимые имена для значений пулинга подключений в ConnectionString. Для получения дополнительной информации см. Организация пулов соединений SQL Server (ADO.NET).
Connection Lifetime (или Load Balance Timeout)
Enlist
Max Pool Size
Min Pool Size
Pooling
При задании ключевых слов или значений пулинга подключений, требующих логических значений, можно использовать yes вместо true и no вместо false. Целочисленные значения представляются в виде строк.
ПримечаниеПримечание
Поставщик данных .NET Framework для SQL Server использует собственный протокол для связи с SQL Server. Таким образом, он не поддерживает использование (DSN) имени источника данных ODBC при подключении к SQL Server, поскольку она не добавляет уровень ODBC.
ПримечаниеПримечание
Всеобщие файлы (UDL) канала передачи данных не поддерживаются для поставщика данных .NET Framework для SQL Server.
Предупреждающее замечаниеВнимание
В данном выпуске необходима осторожность при формировании в приложении строки подключения на основе введенных пользователем данных (например, при получении сведений об имени пользователя и пароле из диалогового окна и при добавлении их к строке подключения). Приложение должно гарантировать, что пользователь не сможет внедрить в эти значения дополнительные параметры строки подключения, например, ввести пароль в виде "допустимыйПароль;database=базаДанных", пытаясь подключиться к другой базе данных. Если требуется составлять строки подключения на основе пользовательского ввода, используйте новый SqlConnectionStringBuilder, проверяющий строку подключения и устраняющий эту проблему. Дополнительные сведения см. в разделе Построители строк подключения.
Примеры

В следующем примере кода перед открытием подключения создается объект SqlConnection и задается его свойство ConnectionString.
C#

private static void OpenSqlConnection()
{
    string connectionString = GetConnectionString();

    using (SqlConnection connection = new SqlConnection())
    {
        connection.ConnectionString = connectionString;

        connection.Open();

        Console.WriteLine("State: {0}", connection.State);
        Console.WriteLine("ConnectionString: {0}",
            connection.ConnectionString);
    }
}

static private string GetConnectionString()
{
    // To avoid storing the connection string in your code, 
    // you can retrieve it from a configuration file.
    return "Data Source=MSSQL1;Initial Catalog=AdventureWorks;"
        + "Integrated Security=true;";
}